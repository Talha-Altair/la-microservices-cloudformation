# Python CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/ for more details
#
version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.4
  aws-ecr: circleci/aws-ecr@7.0.0
  aws-ecs: circleci/aws-ecs@1.3.0
jobs:
  test:
    description: testing bro
    steps:
      - run:
          name: something
          command: echo "10 + 12"
    docker:
      - image: 'circleci/python:3.7.1'

  build_kde:
    description: build and push to aws
    docker:
      - image: 'circleci/python:3.7.1'
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --checkout
      - aws-cli/install
      - aws-cli/configure:
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          aws-region: AWS_REGION_ENV_VAR_NAME
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          create-repo: false
          dockerfile: Dockerfile
          path: .
          profile-name: default
          repo: 'kde2.0-api'
          region: AWS_REGION_ENV_VAR_NAME
          tag: '${CIRCLE_SHA1},latest-<< parameters.env_env >>'
      - aws-ecs/update-service:
          family: '<< parameters.env_env >>-kde20-api'
          cluster-name: 'KDE-<< parameters.env_env >>'
          service-name: 'srv-kde20-api'
          # skip-task-definition-registration: true
          container-image-name-updates: 'container=kde20-api,tag=${CIRCLE_SHA1},image=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com'
workflows: # testing
  build_and_push:
    jobs:
      - test:
          name: 'test-1'
      - build_kde:
          name: 'build_qa'
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*-rc.*$/
          env_env: 'qa'